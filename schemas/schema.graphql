type Query {
  getCourses: [Course]
  getCourse(_id: ID!): [Course]

  getStudents: [User]
  getStudent(_id: ID!): [User]
}

type Mutation {
  createCourse(input: CourseInput!): [Course]
  updateCourse(_id: ID!, input: EditCourseInput): [Course]
  deleteCourse(_id: ID!): [Course]

  createStudent(input: StudentInput!): [User]
  updateStudent(_id: ID!, input: EditStudentInput): [User]
  deleteStudent(_id: ID!): [User]
}

input CourseInput {
  title: String
  professor: String
  description: String
  topic: String
}

input StudentInput {
  name: String
  lastname: String
  age: String
  email: String
  profile_pic: String
  password: String
  role: String
}

input EditCourseInput {
  title: String
  professor: String
  description: String
  topic: String
  participants: [ID]
}

input EditStudentInput {
  name: String
  lastname: String
  age: String
  email: String
  profile_pic: String
  password: String
}

type User {
  _id: ID!
  name: String
  lastname: String
  age: String
  email: String
  profile_pic: String
  password: String
  role: String
}

type Course {
  _id: ID!
  title: String
  professor: String
  description: String
  topic: String
  participants: [User]
}
